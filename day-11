// Question 1:
// Write a program to search if a number exists in an array. If the number exists then return the position. If it exists multiple time then return an array with all the positions. If the number doesn't exist then return -1;
// For example,
// Input: [1, 2, 3, 4, 5, 1, 3] and Search Elem: 4
// Output: 3
// Input: [1, 2, 3, 4, 5, 1, 3] and Search Elem: 1
// Output: [0, 5]
// Input: [1, 2, 3, 4, 5, 1, 3] and Search Elem: 7
// Output: -1


function sNumber(array, number) {
    let positions = [];
    for (let i = 0; i < array.length; i++) {
      if (array[i] === number) {
        positions.push(i);
      }
    }
  
    if (positions.length > 0) {
      return positions.length > 1 ? positions : positions[0];
    } else {
      return -1;
    }
  }
  
  let myArr = [4, 2, ,4,5,6,4,1, 5, 4, 6, 2, 9 ,67,777];
  let myNum = 555;
  
  let result = sNumber(myArr, myNum);
  console.log(result);


  // Question 2:
// Write a program to print following pattern in the console.
// 54321
// 5432
// 543
// 54
// 5

function printPattern(num)
{
//go each row and print the pattern 
//U need to keep 2 for loop so that row and column will be maintanied
    for(let i=1; i<=num; i++){
        let rowPattern = '';
       for(let j =num; j >= i ; j-- ){ 
        rowPattern = rowPattern + j; 
       }
       console.log(rowPattern)
    }
}

console.log(printPattern(5))

  // We can enter the number for which need pattern



// Question 3:
// Write a JavaScript program to sort an array in ascending order
// For example,
// Input: [3, 2, 1, 4, 5, 45]
// Output: [1, 2, 3, 4, 5, 45]

let arry = [3, 2, 1, 4, 5, 45];

console.log(arry.sort(function(a,b){
    return a - b //asc
}
))


// function(a,b){
//     return a - b //asc
// }

// function(a,b){
//     return b - a //asc
// }



// Question 4:
// Write a JavaScript program to check if two strings are anagrams. Anagram string are such two strings which can be rearranged to create one another.
// For example,
// Input: LISTEN and SILENT
// Output: True
// Input: HELLO and JELLO
// Output: False\


function anagram(a,b){
    //CHECK IF BOTH STR lenghth are same 
    if(a.length !== b.length){
        return 'not correct input'
    }

    //sort the both strings and store the result:

    let asorted = a.split('').sort().join('');
    let bsorted = b.split('').sort().join('');
  // a.split('') - ['L','I','S','T','E','N']a.split('') --> 
    //['E', 'I', 'L', 'N', 'S', 'T']
    if(asorted === bsorted){
        return 'its anagram'
    }else{
        return 'its not anagram';
    }
}


console.log(anagram('LISTEN','SILENT'))


// Question 5:
// Write a JavaScript program to reverse a string without using inbuilt methods.
// For example,
// Input: Hello 
// Output: olleH

function reverse(str){
    let newstr = ''
    for(var i=str.length - 1; i >= 0;i--){
        newstr = newstr + str[i];
    }
    console.log(newstr)
}


reverse('HELLO ')


//array :


//array iteration methoads:
foreach()


let a = [12,1,843,444,45,6,7];

//foreach
// 3 paerams 
//1st value
//2nd is index of that value
// 3rd is whole array
a.forEach(myarray)
//hey check every one total is above 200

function myarray(value , index, arraya){
    if(value > 5){
        console.log(arraya[index])
    }
}

//practice question

// check every student has crossed the pass mark 
// pass mark - 250
// should print the passed student mark with postion 


// map():


// let a = [99,91,55,10,11];

//map
//if u map a array it will form a new array with ur actions
// map method will return new array with updated values
let ans = a.map(function(value,position,index){
    if(value >=90){
        return value + 10;
    }

    return value;
})
console.log('old mark',a);
console.log('updated mark',ans);



//practice question

//1.for each
// check every student has crossed the pass mark 
// pass mark - 250
// should print the passed student mark with postion 

//2.map
// check every student has crossed the pass mark 
// pass mark - 250 (mark >= 250)  and + 50 
// if no then - 10
//if they croseed 250 add 50 marks extra other  wise reduce 10 mark
